{
  "version": 3,
  "sources": ["../../../node_modules/zustand/vanilla.js", "../src/index.ts", "../src/main/editable.tsx", "../src/main/store.ts", "../../../node_modules/react-merge-refs/src/index.tsx", "../src/main/useInvalidate.ts", "../src/main/SheetProvider.tsx", "../src/main/editableFactoryConfigUtils.ts", "../src/main/defaultEditableFactoryConfig.ts", "../src/main/utils.ts", "../src/main/RafDriverProvider.tsx", "../src/main/RefreshSnapshot.tsx", "../src/drei/PerspectiveCamera.tsx", "../src/drei/OrthographicCamera.tsx"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction create(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      var _previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {\n    if (selector === void 0) {\n      selector = getState;\n    }\n\n    if (equalityFn === void 0) {\n      equalityFn = Object.is;\n    }\n\n    var currentSlice = selector(state);\n\n    function listenerToAdd() {\n      var nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        var _previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, _previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd);\n    return function () {\n      return listeners.delete(listenerToAdd);\n    };\n  };\n\n  var subscribe = function subscribe(listener, selector, equalityFn) {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    return listeners.clear();\n  };\n\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nexports.default = create;\n", "export {default as editable} from './main/editable'\nexport type {EditableState, BindFunction} from './main/store'\n/**\n * This is a private API that's exported so that `@theatre/r3f/dist/extension`\n * and `@theatre/r3f` can talk to one another. This API _could_ change\n * between patch releases, so please don't build on it :)\n *\n * @internal\n */\nexport {\n  editorStore as ____private_editorStore,\n  allRegisteredObjects as __private_allRegisteredObjects,\n} from './main/store'\n/**\n * This is a private API that's exported so that `@theatre/r3f/dist/extension`\n * and `@theatre/r3f` can talk to one another. This API _could_ change\n * between patch releases, so please don't build on it :)\n *\n * @internal\n */\nexport {makeStoreKey as __private_makeStoreKey} from './main/utils'\n\nexport {default as SheetProvider, useCurrentSheet} from './main/SheetProvider'\nexport {\n  default as RafDriverProvider,\n  useCurrentRafDriver,\n} from './main/RafDriverProvider'\nexport {refreshSnapshot} from './main/utils'\nexport {default as RefreshSnapshot} from './main/RefreshSnapshot'\nexport * from './drei'\n", "import type {ComponentProps, ComponentType, Ref, RefAttributes} from 'react'\nimport {useMemo, useState} from 'react'\nimport React, {forwardRef, useEffect, useLayoutEffect, useRef} from 'react'\nimport {allRegisteredObjects, editorStore} from './store'\nimport mergeRefs from 'react-merge-refs'\nimport useInvalidate from './useInvalidate'\nimport {useCurrentSheet} from './SheetProvider'\nimport defaultEditableFactoryConfig from './defaultEditableFactoryConfig'\nimport type {EditableFactoryConfig} from './editableFactoryConfigUtils'\nimport {makeStoreKey} from './utils'\nimport type {$FixMe, $IntentionalAny} from '../types'\nimport type {ISheetObject} from '@theatre/core'\nimport {notify} from '@theatre/core'\nimport {useCurrentRafDriver} from './RafDriverProvider'\n\nconst createEditable = <Keys extends keyof JSX.IntrinsicElements>(\n  config: EditableFactoryConfig,\n) => {\n  const editable = <\n    T extends ComponentType<any> | keyof JSX.IntrinsicElements | 'primitive',\n    U extends Keys,\n  >(\n    Component: T,\n    type: T extends 'primitive' ? null : U,\n  ) => {\n    type Props = Omit<ComponentProps<T>, 'visible'> & {\n      theatreKey: string\n      visible?: boolean | 'editor'\n      additionalProps?: $FixMe\n      objRef?: $FixMe\n    } & (T extends 'primitive'\n        ? {\n            editableType: U\n          }\n        : {}) &\n      RefAttributes<JSX.IntrinsicElements[U]>\n\n    if (Component !== 'primitive' && !type) {\n      throw new Error(\n        `You must provide the type of the component you're creating an editable for. For example: editable(MyComponent, 'mesh').`,\n      )\n    }\n\n    // TODO: detect if `editable()` is being called in the body of a react component, which is a common\n    // mistake. If it is, throw an error.\n\n    return forwardRef(\n      (\n        {\n          theatreKey,\n          visible,\n          editableType,\n          additionalProps,\n          objRef,\n          ...props\n        }: Props,\n        ref,\n      ) => {\n        //region Runtime type checks\n        if (typeof theatreKey !== 'string') {\n          throw new Error(\n            `No valid theatreKey was provided to the editable component. theatreKey must be a string. Received: ${theatreKey}`,\n          )\n        }\n\n        if (Component === 'primitive' && !editableType) {\n          throw new Error(\n            `When using the primitive component, you must provide the editableType prop. Received: ${editableType}`,\n          )\n        }\n        //endregion\n\n        const actualType = type ?? editableType\n\n        const objectRef = useRef<JSX.IntrinsicElements[U]>()\n\n        const sheet = useCurrentSheet()!\n        const rafDriver = useCurrentRafDriver()\n\n        const [sheetObject, setSheetObject] = useState<\n          undefined | ISheetObject<$FixMe>\n        >(undefined)\n\n        const storeKey = useMemo(\n          () =>\n            makeStoreKey({\n              ...sheet.address,\n              objectKey: theatreKey as $IntentionalAny,\n            }),\n          [sheet, theatreKey],\n        )\n\n        const invalidate = useInvalidate()\n\n        // warn about cameras in r3f\n        useEffect(() => {\n          if (\n            Component === 'perspectiveCamera' ||\n            Component === 'orthographicCamera'\n          ) {\n            const dreiComponent =\n              Component.charAt(0).toUpperCase() + Component.slice(1)\n\n            notify.warning(\n              `Possibly incorrect use of <e.${Component} />`,\n              `You seem to have declared the camera \"${theatreKey}\" simply as \\`<e.${Component} ... />\\`. This alone won't make r3f use it for rendering.\n\nThe easiest way to create a custom animatable \\`${dreiComponent}\\` is to import it from \\`@react-three/drei\\`, and make it editable.\n\\`\\`\\`\nimport {${dreiComponent}} from '@react-three/drei'\n\nconst EditableCamera =\n  editable(${dreiComponent}, '${Component}')\n\\`\\`\\`\nThen you can use it in your JSX like any other editable component. Note the makeDefault prop exposed by drei, which makes r3f use it for rendering.\n\\`\\`\\`\n<EditableCamera\n  theatreKey=\"${theatreKey}\"\n  makeDefault\n>\n\\`\\`\\`\n`,\n            )\n          }\n        }, [Component, theatreKey])\n\n        // create sheet object and add editable to store\n        useLayoutEffect(() => {\n          if (!sheet) return\n          if (sheetObject) {\n            sheet.object(\n              theatreKey,\n              Object.assign(\n                {\n                  ...additionalProps,\n                },\n                // @ts-ignore\n                ...Object.values(config[actualType].props).map(\n                  // @ts-ignore\n                  (value) => value.type,\n                ),\n              ),\n              {reconfigure: true},\n            )\n            return\n          } else {\n            const sheetObject = sheet.object(\n              theatreKey,\n              Object.assign(\n                {\n                  ...additionalProps,\n                },\n                // @ts-ignore\n                ...Object.values(config[actualType].props).map(\n                  // @ts-ignore\n                  (value) => value.type,\n                ),\n              ),\n            )\n            allRegisteredObjects.add(sheetObject)\n            setSheetObject(sheetObject)\n\n            if (objRef)\n              typeof objRef === 'function'\n                ? objRef(sheetObject)\n                : (objRef.current = sheetObject)\n\n            editorStore.getState().addEditable(storeKey, {\n              type: actualType,\n              sheetObject,\n              visibleOnlyInEditor: visible === 'editor',\n              // @ts-ignore\n              objectConfig: config[actualType],\n            })\n          }\n        }, [sheet, storeKey, additionalProps])\n\n        // store initial values of props\n        useLayoutEffect(() => {\n          if (!sheetObject) return\n          sheetObject!.initialValue = Object.fromEntries(\n            // @ts-ignore\n            Object.entries(config[actualType].props).map(\n              // @ts-ignore\n              ([key, value]) => [key, value.parse(props)],\n            ),\n          )\n        }, [\n          sheetObject,\n          // @ts-ignore\n          ...Object.keys(config[actualType].props).map(\n            // @ts-ignore\n            (key) => props[key],\n          ),\n        ])\n\n        // subscribe to prop changes from theatre\n        useLayoutEffect(() => {\n          if (!sheetObject) return\n\n          const object = objectRef.current!\n\n          const setFromTheatre = (newValues: any) => {\n            // @ts-ignore\n            Object.entries(config[actualType].props).forEach(\n              // @ts-ignore\n              ([key, value]) => value.apply(newValues[key], object),\n            )\n            // @ts-ignore\n            config[actualType].updateObject?.(object)\n            invalidate()\n          }\n\n          setFromTheatre(sheetObject.value)\n\n          const unsubscribe = sheetObject.onValuesChange(\n            setFromTheatre,\n            rafDriver,\n          )\n\n          return () => {\n            unsubscribe()\n            sheetObject.sheet.detachObject(theatreKey)\n            allRegisteredObjects.delete(sheetObject)\n            editorStore.getState().removeEditable(storeKey)\n          }\n        }, [sheetObject, rafDriver])\n\n        return (\n          // @ts-ignore\n          <Component\n            ref={mergeRefs([objectRef, ref])}\n            {...props}\n            visible={visible !== 'editor' && visible}\n            userData={{\n              __editable: true,\n              __storeKey: storeKey,\n            }}\n          />\n        )\n      },\n    )\n  }\n\n  const extensions = {\n    ...Object.fromEntries(\n      Object.keys(config).map((key) => [\n        key,\n        // @ts-ignore\n        editable(key, key),\n      ]),\n    ),\n    primitive: editable('primitive', null),\n  } as unknown as {\n    [Property in Keys]: React.ForwardRefExoticComponent<\n      Omit<JSX.IntrinsicElements[Property], 'visible'> & {\n        theatreKey: string\n        visible?: boolean | 'editor'\n        additionalProps?: $FixMe\n        objRef?: $FixMe\n        // not exactly sure how to get the type of the threejs object itself\n        ref?: Ref<unknown>\n      }\n    >\n  } & {\n    primitive: React.ForwardRefExoticComponent<\n      {\n        object: any\n        theatreKey: string\n        visible?: boolean | 'editor'\n        additionalProps?: $FixMe\n        objRef?: $FixMe\n        editableType: keyof JSX.IntrinsicElements\n        // not exactly sure how to get the type of the threejs object itself\n        ref?: Ref<unknown>\n      } & {\n        // Have to reproduce the primitive component's props here because we need to\n        // lift this index type here to the outside to make auto-complete work\n        [props: string]: any\n      }\n    >\n  }\n\n  return Object.assign(editable, extensions)\n}\n\nconst editable = createEditable<keyof typeof defaultEditableFactoryConfig>(\n  defaultEditableFactoryConfig,\n)\n\nexport default editable\n", "import type {StateCreator} from 'zustand'\nimport create from 'zustand/vanilla'\nimport type {Object3D, Scene, WebGLRenderer} from 'three'\nimport {Group} from 'three'\nimport type {ISheetObject} from '@theatre/core'\nimport type {ObjectConfig} from './editableFactoryConfigUtils'\n\nexport type TransformControlsMode = 'translate' | 'rotate' | 'scale'\nexport type TransformControlsSpace = 'world' | 'local'\nexport type ViewportShading = 'wireframe' | 'flat' | 'solid' | 'rendered'\n\nexport type BaseSheetObjectType = ISheetObject<any>\n\nexport const allRegisteredObjects = new WeakSet<BaseSheetObjectType>()\n\nexport interface Editable<T> {\n  type: string\n  sheetObject: ISheetObject<any>\n  objectConfig: ObjectConfig<T>\n  visibleOnlyInEditor: boolean\n}\n\nexport type EditableSnapshot<T extends Editable<any> = Editable<any>> = {\n  proxyObject?: Object3D | null\n} & T\n\nexport interface SerializedEditable {\n  type: string\n}\n\nexport interface EditableState {\n  editables: Record<string, SerializedEditable>\n}\n\nexport type EditorStore = {\n  scene: Scene | null\n  gl: WebGLRenderer | null\n  helpersRoot: Group\n  editables: Record<string, Editable<any>>\n  // this will come in handy when we start supporting multiple canvases\n  canvasName: string\n  sceneSnapshot: Scene | null\n  editablesSnapshot: Record<string, EditableSnapshot> | null\n\n  init: (scene: Scene, gl: WebGLRenderer) => void\n\n  addEditable: (theatreKey: string, editable: Editable<any>) => void\n  removeEditable: (theatreKey: string) => void\n  createSnapshot: () => void\n  setSnapshotProxyObject: (\n    proxyObject: Object3D | null,\n    theatreKey: string,\n  ) => void\n}\n\nconst config: StateCreator<EditorStore> = (set, get) => {\n  return {\n    sheet: null,\n    editorObject: null,\n    scene: null,\n    gl: null,\n    helpersRoot: new Group(),\n    editables: {},\n    canvasName: 'default',\n    sceneSnapshot: null,\n    editablesSnapshot: null,\n    initialEditorCamera: {},\n\n    init: (scene, gl) => {\n      set({\n        scene,\n        gl,\n      })\n\n      // Create a snapshot, so that if the editor is already open, it gets refreshed\n      // when the scene is initialized\n      get().createSnapshot()\n    },\n\n    addEditable: (theatreKey, editable) => {\n      set((state) => ({\n        editables: {\n          ...state.editables,\n          [theatreKey]: editable,\n        },\n      }))\n    },\n\n    removeEditable: (theatreKey) => {\n      set((state) => {\n        const editables = {...state.editables}\n        delete editables[theatreKey]\n        return {\n          editables,\n        }\n      })\n    },\n\n    createSnapshot: () => {\n      set((state) => ({\n        sceneSnapshot: state.scene?.clone() ?? null,\n        editablesSnapshot: state.editables,\n      }))\n    },\n\n    setSnapshotProxyObject: (proxyObject, theatreKey) => {\n      set((state) => ({\n        editablesSnapshot: {\n          ...state.editablesSnapshot,\n          [theatreKey]: {\n            ...state.editablesSnapshot![theatreKey],\n            proxyObject,\n          },\n        },\n      }))\n    },\n  }\n}\n\nexport const editorStore = create<EditorStore>(config)\n\nexport type BindFunction = (options: {\n  allowImplicitInstancing?: boolean\n  gl: WebGLRenderer\n  scene: Scene\n}) => void\n\nexport const bindToCanvas: BindFunction = ({gl, scene}) => {\n  const init = editorStore.getState().init\n  init(scene, gl)\n}\n", "import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n", "import {useThree} from '@react-three/fiber'\n\nexport default function useInvalidate() {\n  return useThree(({invalidate}) => invalidate)\n}\n", "import type {ReactNode} from 'react'\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n} from 'react'\nimport {useThree} from '@react-three/fiber'\nimport type {ISheet} from '@theatre/core'\nimport {bindToCanvas} from './store'\n\nconst ctx = createContext<{sheet: ISheet}>(undefined!)\n\nconst useWrapperContext = (): {sheet: ISheet} => {\n  const val = useContext(ctx)\n  if (!val) {\n    throw new Error(\n      `No sheet found. You need to add a <SheetProvider> higher up in the tree. https://docs.theatrejs.com/r3f.html#sheetprovider`,\n    )\n  }\n  return val\n}\n\nexport const useCurrentSheet = (): ISheet | undefined => {\n  return useWrapperContext().sheet\n}\n\nconst SheetProvider: React.FC<{\n  sheet: ISheet\n  children: ReactNode\n}> = ({sheet, children}) => {\n  const {scene, gl} = useThree((s) => ({scene: s.scene, gl: s.gl}))\n\n  useEffect(() => {\n    if (!sheet || sheet.type !== 'Theatre_Sheet_PublicAPI') {\n      throw new Error(`sheet in <Wrapper sheet={sheet}> has an invalid value`)\n    }\n  }, [sheet])\n\n  useLayoutEffect(() => {\n    bindToCanvas({gl, scene})\n  }, [scene, gl])\n\n  return <ctx.Provider value={{sheet}}>{children}</ctx.Provider>\n}\n\nexport default SheetProvider\n", "import type {UnknownShorthandCompoundProps} from '@theatre/core'\nimport {notify} from '@theatre/core'\nimport {types} from '@theatre/core'\nimport type {Object3D} from 'three'\nimport type {IconID} from '../extension/icons'\nimport {Color} from 'three'\n\nexport type Helper = Object3D & {\n  update?: () => void\n}\ntype PropConfig<T> = {\n  parse: (props: Record<string, any>) => T\n  apply: (value: T, object: any) => void\n  type: UnknownShorthandCompoundProps\n}\ntype Props = Record<string, PropConfig<any>>\ntype Meta<T> = {\n  useTransformControls: boolean\n  updateObject?: (object: T) => void\n  icon: IconID\n  dimensionless?: boolean\n  createHelper?: (object: T) => Helper\n}\nexport type ObjectConfig<T> = {props: Props} & Meta<T>\nexport type EditableFactoryConfig = Partial<\n  Record<keyof JSX.IntrinsicElements, ObjectConfig<any>>\n>\n\ntype Vector3 = {\n  x: number\n  y: number\n  z: number\n}\n\nfunction isNumber(value: any) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nfunction isVectorObject(value: any) {\n  return (['x', 'y', 'z'] as const).every((axis) => isNumber(value[axis]))\n}\n\nexport const createVector = (components?: [number, number, number]) => {\n  return components\n    ? {x: components[0], y: components[1], z: components[2]}\n    : {\n        x: 0,\n        y: 0,\n        z: 0,\n      }\n}\n\nexport const createVectorPropConfig = (\n  key: string,\n  defaultValue = createVector(),\n  {nudgeMultiplier = 0.01} = {},\n): PropConfig<Vector3> => ({\n  parse: (props) => {\n    const propValue = props[key]\n    // if prop exists\n    const vector = !propValue\n      ? defaultValue\n      : // if prop is an array\n      Array.isArray(propValue)\n      ? createVector(propValue as any)\n      : // if prop is a scalar\n      isNumber(propValue)\n      ? {\n          x: propValue,\n          y: propValue,\n          z: propValue,\n        }\n      : // if prop is a threejs Vector3\n      isVectorObject(propValue)\n      ? {\n          x: propValue.x,\n          y: propValue.y,\n          z: propValue.z,\n        }\n      : // show a warning and return defaultValue\n        (notify.warning(\n          `Invalid value for vector prop \"${key}\"`,\n          `Couldn't make sense of \\`${key}={${JSON.stringify(\n            propValue,\n          )}}\\`, falling back to \\`${key}={${JSON.stringify([\n            defaultValue.x,\n            defaultValue.y,\n            defaultValue.z,\n          ])}}\\`.\n\nTo fix this, make sure the prop is set to either a number, an array of numbers, or a three.js Vector3 object.`,\n        ),\n        defaultValue)\n    ;(['x', 'y', 'z'] as const).forEach((axis) => {\n      // e.g. r3f also accepts prop keys like \"scale-x\"\n      if (props[`${key}-${axis}` as any])\n        vector[axis] = props[`${key}-${axis}` as any]\n    })\n    return vector\n  },\n  apply: (value, object) => {\n    object[key].set(value.x, value.y, value.z)\n  },\n  type: {\n    [key]: {\n      x: types.number(defaultValue.x, {nudgeMultiplier}),\n      y: types.number(defaultValue.y, {nudgeMultiplier}),\n      z: types.number(defaultValue.z, {nudgeMultiplier}),\n    },\n  },\n})\n\nexport const createNumberPropConfig = (\n  key: string,\n  defaultValue: number = 0,\n  {nudgeMultiplier = 0.01} = {},\n): PropConfig<number> => ({\n  parse: (props) => {\n    return props[key] ?? defaultValue\n  },\n  apply: (value, object) => {\n    object[key] = value\n  },\n  type: {\n    [key]: types.number(defaultValue, {nudgeMultiplier}),\n  },\n})\n\nexport type Rgba = {\n  r: number\n  g: number\n  b: number\n  a: number\n}\n\nexport const createColorPropConfig = (\n  key: string,\n  defaultValue = new Color(0, 0, 0),\n): PropConfig<Rgba> => ({\n  parse: (props) => {\n    return {...(props[key] ?? defaultValue), a: 1}\n  },\n  apply: (value, object) => {\n    object[key].setRGB(value.r, value.g, value.b)\n  },\n  type: {\n    [key]: types.rgba({...defaultValue, a: 1}),\n  },\n})\n\nexport const extendObjectProps = <T extends {props: {}}>(\n  objectConfig: T,\n  extension: Props,\n) => ({\n  ...objectConfig,\n  props: {...objectConfig.props, ...extension},\n})\n", "import type {EditableFactoryConfig} from './editableFactoryConfigUtils'\nimport {\n  createColorPropConfig,\n  createNumberPropConfig,\n  createVector,\n  createVectorPropConfig,\n  extendObjectProps,\n} from './editableFactoryConfigUtils'\nimport type {\n  DirectionalLight,\n  Object3D,\n  OrthographicCamera,\n  PerspectiveCamera,\n  PointLight,\n  SpotLight,\n} from 'three'\nimport {\n  BoxHelper,\n  CameraHelper,\n  Color,\n  DirectionalLightHelper,\n  PointLightHelper,\n  SpotLightHelper,\n} from 'three'\n\nconst baseObjectConfig = {\n  props: {\n    position: createVectorPropConfig('position'),\n    rotation: createVectorPropConfig('rotation'),\n    scale: createVectorPropConfig('scale', createVector([1, 1, 1])),\n  },\n  useTransformControls: true,\n  icon: 'cube' as const,\n  createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n}\n\nconst baseLightConfig = {\n  ...extendObjectProps(baseObjectConfig, {\n    intensity: createNumberPropConfig('intensity', 1),\n    distance: createNumberPropConfig('distance'),\n    decay: createNumberPropConfig('decay'),\n    color: createColorPropConfig('color', new Color('white')),\n  }),\n  dimensionless: true,\n}\n\nconst baseCameraConfig = {\n  ...extendObjectProps(baseObjectConfig, {\n    near: createNumberPropConfig('near', 0.1, {nudgeMultiplier: 0.1}),\n    far: createNumberPropConfig('far', 2000, {nudgeMultiplier: 0.1}),\n  }),\n  updateObject: (camera: PerspectiveCamera | OrthographicCamera) => {\n    camera.updateProjectionMatrix()\n  },\n  icon: 'camera' as const,\n  dimensionless: true,\n  createHelper: (camera: PerspectiveCamera) => new CameraHelper(camera),\n}\n\nconst selectionColor = '#40AAA4'\n\nconst defaultEditableFactoryConfig = {\n  group: {\n    ...baseObjectConfig,\n    icon: 'collection' as const,\n    createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n  },\n  mesh: {\n    ...baseObjectConfig,\n    icon: 'cube' as const,\n    createHelper: (object: Object3D) => new BoxHelper(object, selectionColor),\n  },\n  spotLight: {\n    ...extendObjectProps(baseLightConfig, {\n      angle: createNumberPropConfig('angle', 0, {nudgeMultiplier: 0.001}),\n      penumbra: createNumberPropConfig('penumbra', 0, {nudgeMultiplier: 0.001}),\n    }),\n    icon: 'spotLight' as const,\n    createHelper: (light: SpotLight) =>\n      new SpotLightHelper(light, selectionColor),\n  },\n  directionalLight: {\n    ...extendObjectProps(baseObjectConfig, {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n    }),\n    icon: 'sun' as const,\n    dimensionless: true,\n    createHelper: (light: DirectionalLight) =>\n      new DirectionalLightHelper(light, 1, selectionColor),\n  },\n  pointLight: {\n    ...baseLightConfig,\n    icon: 'lightBulb' as const,\n    createHelper: (light: PointLight) =>\n      new PointLightHelper(light, 1, selectionColor),\n  },\n  ambientLight: {\n    props: {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n    },\n    useTransformControls: false,\n    icon: 'lightBulb' as const,\n  },\n  hemisphereLight: {\n    props: {\n      intensity: createNumberPropConfig('intensity', 1),\n      color: createColorPropConfig('color', new Color('white')),\n      groundColor: createColorPropConfig('groundColor', new Color('white')),\n    },\n    useTransformControls: false,\n    icon: 'lightBulb' as const,\n  },\n  perspectiveCamera: extendObjectProps(baseCameraConfig, {\n    fov: createNumberPropConfig('fov', 50, {nudgeMultiplier: 0.1}),\n    zoom: createNumberPropConfig('zoom', 1),\n  }),\n  orthographicCamera: baseCameraConfig,\n  points: baseObjectConfig,\n  line: baseObjectConfig,\n  lineLoop: baseObjectConfig,\n  lineSegments: baseObjectConfig,\n  fog: {\n    props: {\n      color: createColorPropConfig('color'),\n      near: createNumberPropConfig('near', 1, {nudgeMultiplier: 0.1}),\n      far: createNumberPropConfig('far', 1000, {nudgeMultiplier: 0.1}),\n    },\n    useTransformControls: false,\n    icon: 'cloud' as const,\n  },\n}\n\n// Assert that the config is indeed of EditableFactoryConfig without actually\n// forcing it to that type so that we can pass the real type to the editable factory\ndefaultEditableFactoryConfig as EditableFactoryConfig\n\nexport default defaultEditableFactoryConfig\n", "import {editorStore} from './store'\nimport type {ISheetObject} from '@theatre/core'\n\nexport const refreshSnapshot = editorStore.getState().createSnapshot\n\nexport const makeStoreKey = (sheetObjectAddress: ISheetObject['address']) =>\n  `${sheetObjectAddress.sheetId}:${sheetObjectAddress.sheetInstanceId}:${sheetObjectAddress.objectKey}`\n", "import type {ReactNode} from 'react'\nimport React, {createContext, useContext, useEffect} from 'react'\nimport type {IRafDriver} from '@theatre/core'\n\nconst ctx = createContext<{rafDriver: IRafDriver}>(undefined!)\n\nexport const useCurrentRafDriver = (): IRafDriver | undefined => {\n  return useContext(ctx)?.rafDriver\n}\n\nconst RafDriverProvider: React.FC<{\n  driver: IRafDriver\n  children: ReactNode\n}> = ({driver, children}) => {\n  useEffect(() => {\n    if (!driver || driver.type !== 'Theatre_RafDriver_PublicAPI') {\n      throw new Error(\n        `driver in <RafDriverProvider deriver={driver}> has an invalid value`,\n      )\n    }\n  }, [driver])\n\n  return <ctx.Provider value={{rafDriver: driver}}>{children}</ctx.Provider>\n}\n\nexport default RafDriverProvider\n", "import React, {useEffect} from 'react'\nimport {refreshSnapshot} from './utils'\n\n/**\n * Putting this element in a suspense tree makes sure the snapshot editor\n * gets refreshed once the tree renders.\n *\n * Alternatively you can use {@link refreshSnapshot}\n *\n * @example\n * Usage\n * ```jsx\n * <Suspense fallback={null}>\n *  <RefreshSnapshot />\n *  <Model url={sceneGLB} />\n * </Suspense>\n * ```\n */\nconst RefreshSnapshot: React.FC<{}> = () => {\n  useEffect(() => {\n    setTimeout(() => {\n      refreshSnapshot()\n    })\n  }, [])\n  return <></>\n}\n\nexport default RefreshSnapshot\n", "import * as React from 'react'\nimport type {PerspectiveCamera as PerspectiveCameraImpl, Object3D} from 'three'\nimport {useFrame, useThree} from '@react-three/fiber'\nimport mergeRefs from 'react-merge-refs'\nimport {editable} from '../index'\nimport {Vector3} from 'three'\nimport {editorStore} from '../main/store'\nimport type {MutableRefObject} from 'react'\n\nexport type PerspectiveCameraProps = Omit<\n  JSX.IntrinsicElements['perspectiveCamera'],\n  'lookAt'\n> & {\n  lookAt?:\n    | [number, number, number]\n    | Vector3\n    | MutableRefObject<Object3D | null | undefined>\n  makeDefault?: boolean\n  manual?: boolean\n  children?: React.ReactNode\n}\n\nexport const PerspectiveCamera = editable(\n  React.forwardRef(\n    ({makeDefault, lookAt, ...props}: PerspectiveCameraProps, ref) => {\n      const set = useThree(({set}) => set)\n      const camera = useThree(({camera}) => camera)\n      const size = useThree(({size}) => size)\n      const cameraRef = React.useRef<PerspectiveCameraImpl>(null!)\n\n      React.useLayoutEffect(() => {\n        if (!props.manual) {\n          cameraRef.current.aspect = size.width / size.height\n        }\n      }, [size, props])\n\n      React.useLayoutEffect(() => {\n        cameraRef.current.updateProjectionMatrix()\n      })\n\n      React.useLayoutEffect(() => {\n        if (makeDefault) {\n          const oldCam = camera\n          set(() => ({camera: cameraRef.current!}))\n          return () => set(() => ({camera: oldCam}))\n        }\n        // The camera should not be part of the dependency list because this components camera is a stable reference\n        // that must exchange the default, and clean up after itself on unmount.\n      }, [cameraRef, makeDefault, set])\n\n      useFrame(() => {\n        if (lookAt && cameraRef.current) {\n          cameraRef.current.lookAt(\n            Array.isArray(lookAt)\n              ? new Vector3(...lookAt)\n              : (lookAt as MutableRefObject<Object3D>).current\n              ? (lookAt as MutableRefObject<Object3D>).current.position\n              : (lookAt as Vector3),\n          )\n\n          // how could we make it possible for users to do something like this too?\n          const snapshot = editorStore.getState().editablesSnapshot\n          if (snapshot) {\n            snapshot[\n              cameraRef.current.userData.__storeKey\n            ].proxyObject?.rotation.copy(cameraRef.current.rotation)\n          }\n        }\n      })\n\n      return <perspectiveCamera ref={mergeRefs([cameraRef, ref])} {...props} />\n    },\n  ),\n  'perspectiveCamera',\n)\n", "import * as React from 'react'\nimport type {\n  OrthographicCamera as OrthographicCameraImpl,\n  Object3D,\n} from 'three'\nimport {useFrame, useThree} from '@react-three/fiber'\nimport mergeRefs from 'react-merge-refs'\nimport {editable} from '../index'\nimport {Vector3} from 'three'\nimport type {MutableRefObject} from 'react'\nimport {editorStore} from '../main/store'\n\nexport type OrthographicCameraProps = Omit<\n  JSX.IntrinsicElements['orthographicCamera'],\n  'lookAt'\n> & {\n  lookAt?:\n    | [number, number, number]\n    | Vector3\n    | MutableRefObject<Object3D | null | undefined>\n  makeDefault?: boolean\n  manual?: boolean\n  children?: React.ReactNode\n}\n\nexport const OrthographicCamera = editable(\n  React.forwardRef(\n    ({makeDefault, lookAt, ...props}: OrthographicCameraProps, ref) => {\n      const set = useThree(({set}) => set)\n      const camera = useThree(({camera}) => camera)\n      const size = useThree(({size}) => size)\n      const cameraRef = React.useRef<OrthographicCameraImpl>(null!)\n\n      React.useLayoutEffect(() => {\n        if (!props.manual) {\n          cameraRef.current.updateProjectionMatrix()\n        }\n      }, [size, props])\n\n      React.useLayoutEffect(() => {\n        cameraRef.current.updateProjectionMatrix()\n      })\n\n      React.useLayoutEffect(() => {\n        if (makeDefault) {\n          const oldCam = camera\n          set(() => ({camera: cameraRef.current!}))\n          return () => set(() => ({camera: oldCam}))\n        }\n        // The camera should not be part of the dependency list because this components camera is a stable reference\n        // that must exchange the default, and clean up after itself on unmount.\n      }, [cameraRef, makeDefault, set])\n\n      useFrame(() => {\n        if (lookAt && cameraRef.current) {\n          cameraRef.current.lookAt(\n            Array.isArray(lookAt)\n              ? new Vector3(...lookAt)\n              : (lookAt as MutableRefObject<Object3D>).current\n              ? (lookAt as MutableRefObject<Object3D>).current.position\n              : (lookAt as Vector3),\n          )\n\n          // how could we make it possible for users to do something like this too?\n          const snapshot = editorStore.getState().editablesSnapshot\n          if (snapshot) {\n            snapshot[\n              cameraRef.current.userData.__storeKey\n            ].proxyObject?.rotation.copy(cameraRef.current.rotation)\n          }\n        }\n      })\n\n      return (\n        <orthographicCamera\n          left={size.width / -2}\n          right={size.width / 2}\n          top={size.height / 2}\n          bottom={size.height / -2}\n          ref={mergeRefs([cameraRef, ref])}\n          {...props}\n        />\n      )\n    },\n  ),\n  'orthographicCamera',\n)\n"],
  "mappings": "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",
  "names": []
}
